{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template block_lpprogressx/lpprogressx

    This template renders the learning plan progress.

    Example context (json):
    {
        "plans": [{
            "name": "A learning plan example",
                "iscompleted": 1,
                "competencies": [{
                    "isproficient": 1,
                    "competency": {
                        "id": 1,
                        "shortname": "Competency number one"
                    }
                },
                {
                  "isproficient": 1,
                    "competency": {
                        "id": 1,
                        "shortname": "Competency number two"
                    }
                }]
        }]
    }
}}
<div class="singlebutton">
    <form method="get" action="{{url}}">
        <input type="hidden" name="userid" value="{{usrid}}">
        <button type="submit" class="btn btn-secondary" id="single_button625ee1973d6e019" title="">{{#str}} addnewplan, tool_lp {{/str}}</button>
    </form>
</div>

<div class="row">
  {{#plans}}
    <div class="col-3">
        <div class="card">
            <p class="">
              <a href="{{url}}">
                {{#iscompleted}}
                  <span class="small active"><span class="small">{{#str}} checkchar, block_lpprogressx {{/str}}</span></span>
                {{/iscompleted}}
                {{^iscompleted}}
                  <span class="small active"><span class="small">{{#str}} uncheckchar, block_lpprogressx {{/str}}</span></span>
                {{/iscompleted}}
                
                {{name}}
              </a>
              {{#iscompleted}}
                <a class="sectiontoggle collapsed" data-toggle="collapse" href="#collapsePlan{{id}}" role="button" aria-expanded="false" aria-controls="collapsePlan{{id}}"> ▾▴</a>
              {{/iscompleted}}
            </p>
            <div class="col-md-12 {{#iscompleted}}collapse{{/iscompleted}}" {{#iscompleted}}id="collapsePlan{{id}}"{{/iscompleted}} >
              <ul id="progressbar">
                {{#competencies}}
                  <li class="step0 {{#isproficient}}active{{/isproficient}}">
                    <a href="#" data-id="{{competency.id}}" data-action="find-courses-link">{{competency.shortname}}</a>
                    <a data-toggle="collapse" href="#competencyDescription{{competency.id}}" role="button" aria-expanded="false" aria-controls="competencyDescription{{competency.id}}">…</a>
                    <div class="collapse" id="competencyDescription{{competency.id}}">
                        {{{competency.description}}}
                    </div>
                  </li>
                {{/competencies}}
                <li class="step0 {{#iscompleted}}active{{/iscompleted}}">
                  <h4 class="text-muted final">{{#str}} completed, block_lpprogressx {{/str}}</h4>
                </li>
              </ul>
            </div>
        </div>
    </div>
  {{/plans}}
</div>
{{#js}}
require(['jquery',
        'core/templates',
        'core/ajax',
        'core/notification',
        'core/str',
        'tool_lp/dialogue'],
        function($, templates, ajax, notification, str, Dialogue) {

    $('section.block_lpprogressx').find('[data-action="find-courses-link"]').click(function(e) {
        e.preventDefault();

        var competencyid = $(e.target).data('id');
        var requests = ajax.call([{
            methodname: 'tool_lp_list_courses_using_competency',
            args: {id: competencyid}
        }]);

        requests[0].done(function(courses) {
            var context = {
                courses: courses
            };
            templates.render('tool_lp/linked_courses_summary', context).done(function(html) {
                str.get_string('linkedcourses', 'tool_lp').done(function(linkedcourses) {
                    new Dialogue(
                        linkedcourses, // Title.
                        html // The linked courses.
                    );
                }).fail(notification.exception);
            }).fail(notification.exception);
        }).fail(notification.exception);
    });
});
{{/js}}
